# This file defines and runs our entire multi-container application.

version: '3.8'

services:
  # The Main Orchestrator Service (main.py)
  orchestrator:
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000" # Connects your computer's port 8000 to the container's port 8000
    volumes:
      - ./backend:/app/backend # Mounts your local backend code for live reloading
    env_file:
      - .env # Provides the API key to the container

  # The RAG Service (rag_service.py)
  rag_service:
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn backend.rag_service:app --host 0.0.0.0 --port 8001
    volumes:
      # Mounts your local rag_kb folder into the container for live updates
      - ./rag_kb:/app/rag_kb
      # Mounts your local rag_db folder to persist the vector database
      - ./rag_db:/app/rag_db

  # The Frontend Service (Nginx Web Server)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "8080:80" # Connects your computer's port 8080 to the container's port 80
    depends_on:
      - orchestrator # Ensures the backend starts up before the frontend is accessible

```

---

### **Your Final Action Plan**

You now have all the necessary code. The next steps are simple but must be done precisely.

1.  **Prepare Your `requirements.txt`:** Ensure this file is clean and contains all necessary packages. It should look something like this:
    ```
    fastapi
    uvicorn[standard]
    python-dotenv
    google-generativeai
    requests
    langchain
    langchain-community
    sentence-transformers
    chromadb
    pypdf
    ```
2.  **Create the Dockerfiles:** Create the three files I provided (`Dockerfile`, `Dockerfile.frontend`, `docker-compose.yml`) in your project's root directory.
3.  **Launch the Entire Application:** Open your terminal in the project root directory and run the single master command:
    ```bash
    docker-compose up --build
    
